// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @unique
  name     String
  imageUrl String
  email    String @unique

  members Member[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String

  profileId String  @db.ObjectId
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

model Recipe {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique

  materials       Material[]
  recipeMaterials RecipeMaterial[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Material {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  type     String?
  quantity String?

  recipeId String? @db.ObjectId
  recipe   Recipe? @relation(fields: [recipeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RecipeMaterial {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  weight            String
  materialId        String

  recipeId String? @db.ObjectId
  recipe   Recipe? @relation(fields: [recipeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
